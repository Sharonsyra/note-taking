play {
  http {
    secret.key = "random-words"
    secret.key = ${?APPLICATION_SECRET}
  },
  server {
    provider = "play.core.server.AkkaHttpServerProvider"
    pidfile {
      path = /dev/null
    }
  }
  application {
    loader = com.sharonsyra.note.NoteApplicationLoader
  }
}

play.filters.cors.pathPrefixes = ["/"]
play.filters.hosts.allowed = ["localhost", ".local", "127.0.0.1"]
# Defaults to use for each Akka persistence plugin
jdbc-defaults.slick {

  # The Slick profile to use
  # set to one of: slick.jdbc.PostgresProfile$, slick.jdbc.MySQLProfile$, slick.jdbc.OracleProfile$ or slick.jdbc.H2Profile$
  profile = "slick.jdbc.PostgresProfile$"

  # The JNDI name for the Slick pre-configured DB
  # By default, this value will be used by all akka-persistence-jdbc plugin components (journal, read-journal and snapshot).
  # you may configure each plugin component to use different DB settings
  jndiDbName=DefaultDB
}

db {
  default {
    driver = "org.postgresql.Driver"
    username = "postgres"
    password = "Passmefast"
    username = ${?POSTGRES_USER}
    password = ${?POSTGRES_PASSWORD}
    host = "postgres"
    host = ${?POSTGRES_HOST}
    url =  "jdbc:postgresql://"${db.default.host}":5432/postgres"
    # The JNDI name for this DataSource
    # Play, and therefore Lagom, will automatically register this DataSource as a JNDI resource using this name.
    # This DataSource will be used to build a pre-configured Slick DB
    jndiName=DefaultDS

    # Lagom will configure a Slick Database, using the async-executor settings below
    # and register it as a JNDI resource using this name.
    # By default, all akka-persistence-jdbc plugin components will use this JDNI name
    # to lookup for this pre-configured Slick DB
    jndiDbName=DefaultDB
  }
}

lagom.persistence.jdbc.create-tables.auto = false

lagompb {
  service-name = "note-service"

  protos-package = ${PROTO_PACKAGE}
  # Ask timeout is required to
  # send commands to the aggregate root
  ask-timeout = 5

  snaphsot-criteria {
    # number of events to batch persist
    frequency = 2
    # number of snapshots to retain
    retention = 2
  }

  events {
    # the events tag name. It is recommended to use the service name
    # because the event tag name must be unique and cannot be changed once the application has handled
    # an aggregate event.
    # Reference: https://www.lagomframework.com/documentation/latest/scala/ReadSide.html#Refactoring-Consideration
    tagname: "note-service"
  }
}
